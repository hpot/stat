# -*- coding: utf-8 -*-
"""보육원.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tsu_lkYWt-p99fnzw_86bkjwftPg3zg_
"""

# -*- coding: utf-8 -*-

# prompt: https://raw.githubusercontent.com/hpot/stat/main/2501kind.xlsx 이걸로 df생성

import pandas as pd
excel_url = 'https://raw.githubusercontent.com/hpot/stat/main/2501kind.xlsx'
df = pd.read_excel(excel_url)

# prompt: /content/drive/MyDrive/colab/유치원/2501kind.xlsx read show coulumns 0, 3, 18 remove row 0,1 1번컬럼 내용에 '교육청' 삭제 2번컬럼 내용에 '사립'포함하는 열삭제 renumbering column0의 이름을 지역으로 변경 column3의 이름을 설립유형으로 변경 column18의 이름을 총정원수로 변경print

#import pandas as pd
#file_path = '/content/drive/MyDrive/colab/유치원/2501kind.xlsx

# Select columns 0, 3, and 18
df = df.iloc[:, [0, 3, 18]]

# Remove rows 0 and 1
df = df.drop([0, 1])

# Remove '교육청' from column 0
df.iloc[:, 0] = df.iloc[:, 0].astype(str).str.replace('교육청', '', regex=False)

# Remove rows where column 1 contains '사립'
df = df[~df.iloc[:, 1].astype(str).str.contains('사립', regex=False)]

# Renumber the index
df = df.reset_index(drop=True)

# Rename columns
df = df.rename(columns={df.columns[0]: '지역', df.columns[1]: '설립유형', df.columns[2]: '총정원수'})

# prompt: 총정원수값 전부 int로 변환 df_kind 지역 groupby agg 공립유치원 count 총정원수 sum

# '총정원수' column to int
df['총정원수'] = df['총정원수'].astype(int)

# Group by '지역' and aggregate
df_kind  = df.groupby('지역').agg(
    공립유치원수=('설립유형', 'count'),  # Count '설립유형' column (which are all '공립' at this point)
    총정원수=('총정원수', 'sum')      # Sum '총정원수' column
).reset_index()

# prompt: df_kind DataFrame 사용: column0 값 전부 str로 변경 print

# Access the first column by its name
column_name = df_kind.columns[0]
# Convert the column to string type
df_kind[column_name] = df_kind[column_name].astype(str)

# prompt: https://raw.githubusercontent.com/hpot/stat/main/2501kind.xlsx 이걸로 df생성

import pandas as pd
excel_url = 'https://raw.githubusercontent.com/hpot/stat/main/pop345.xlsx'
df_pop = pd.read_excel(excel_url)

# prompt: /content/drive/MyDrive/colab/유치원/pop345.xlsx read print 2번열 이름을 '지역'으로 변경 4번열 이름을 '3~5세인구수'로 변경 2번 4번 열 제외하고 다른열 삭제 renumbering  후 0 1 2 행 삭제

#import pandas as pd
#file_path_pop = '/content/drive/MyDrive/colab/유치원/pop345.xlsx'
#df_pop = pd.read_excel(file_path_pop)

# Print initial column names for verification
#print("Initial column names:", df_pop.columns.tolist())

# Change the name of the 2nd column (index 1) to '지역'
df_pop = df_pop.rename(columns={df_pop.columns[1]: '지역'})

# Change the name of the 4th column (index 3) to '3~5세인구수'
df_pop = df_pop.rename(columns={df_pop.columns[3]: '3~5세인구수'})

# Keep only the columns named '지역' and '3~5세인구수'
df_pop = df_pop[['지역', '3~5세인구수']]

# Remove the first 3 rows (index 0, 1, and 2)
df_pop = df_pop.drop([0, 1, 2])

# prompt: df_kind 지역값 rstrip df_pop 지역값 rstrip

df_kind['지역'] = df_kind['지역'].str.rstrip()
df_pop['지역'] = df_pop['지역'].str.rstrip()

# prompt: df_kind df_pop merge remove column 0 1

import pandas as pd
# Merge the two dataframes on the '지역' column
merged_df = pd.merge(df_kind, df_pop, on='지역', how='inner')

# prompt: merged_df DataFrame 사용: 컬럼추가 '공립유치원 미취원율' 값은 1,0- (총정원수/3~5세인구수) 공립유치원 미취원율로 내림차순 정렬 3~5세인구수값 전부 int로 변경 print

# Replace commas in the '3~5세인구수' column and convert to integer
merged_df['3~5세인구수'] = merged_df['3~5세인구수'].str.replace(',', '').astype(int)

# Calculate the '공립유치원 미취원율'
merged_df['공립유치원 미취원율'] = 1.0 - (merged_df['총정원수'] / merged_df['3~5세인구수'])

# Sort the DataFrame by '공립유치원 미취원율' in descending order
merged_df = merged_df.sort_values(by='공립유치원 미취원율', ascending=False)

# prompt: merged_df DataFrame 사용: 지역명 공립유치원수 총정원수 3~5세인구수 공립유치원 미취원율 을 제외한 모든 열 삭제print

# Drop all columns except for the specified ones
columns_to_keep = ['지역', '공립유치원수', '총정원수', '3~5세인구수', '공립유치원 미취원율']
merged_df = merged_df[columns_to_keep]

# prompt: merged_df 깊은 복사 into final_df

final_df = merged_df.copy(deep=True)

# prompt: final_df DataFrame 사용: 지역과 공립유치원 미취원율 제외한 모든 행 삭제 into rr_df 공립유치원 미취원율 오름차순정렬 print

# Select the columns '지역' and '공립유치원 미취원율' and assign to rr_df
rr_df = final_df[['지역', '공립유치원 미취원율']]

# Sort rr_df by '공립유치원 미취원율' in ascending order
rr_df = rr_df.sort_values(by='공립유치원 미취원율')

# prompt: rr_df DataFrame 사용: 공립유치원 미취원율 값 ×100 후.2f round print

# Multiply the column by 100 and round to 2 decimal places
rr_df['공립유치원 미취원율'] = (rr_df['공립유치원 미취원율'] * 100).round(2)

# prompt: rr_df col1값 추출 후 리스트화 into region col2값 추출후 리스트화 into rate print

region = rr_df.iloc[:, 0].tolist()
rate = rr_df.iloc[:, 1].tolist()

df_z =[list(z) for z in zip(region, rate)]

# prompt: rate값 전부 100.0-rate 후 .2f round into c

c = [round(100.0 - r, 2) for r in rate]
c

# Import packages
from dash import Dash, html, dash_table
import pandas as pd
import plotly.express as px
from dash import dcc # Import dcc


# Initialize the app
#app = Dash()
app = Dash(__name__)
server = app.server

fig = px.bar(rr_df,
             y='지역',
             x='공립유치원 미취원율',
             text_auto=True,
             orientation = 'h',

)


fig.update_traces(texttemplate='%{x}%', textposition='auto')
fig.layout.xaxis.fixedrange = True
fig.layout.yaxis.fixedrange = True

# App layout
app.layout = [
    html.Div(children='지역별 공립유치원 미취원율'),
    dcc.Graph(figure=fig),
    dash_table.DataTable(data=rr_df.to_dict('records'), page_size=17),
]

# Run the app
if __name__ == '__main__':
    app.run(debug=False)
